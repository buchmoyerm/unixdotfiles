export SHELL=/bin/bash

# CDPATH is evil
CDPATH=

alias psme="ps -f -u ddowhy"

#export ACK_COLOR_FILENAME="bold"

alias wget="http_proxy=proxy.bloomberg.com wget"

#alias ibcron="EDITOR=vi sudo -u ibbldbot crontab -e"
#function ibbots { for p in /bb/bigstorq0/ib/buildbot/bot-ib-* ; do xterm -e ssh ${p##*bot-ib-} & sleep 2 ; done }

# {{{ Paths

export MANPATH

# Start with only setting unix-y PATHs
#export PATH="/usr/bin:/usr/sbin:/bin:/usr/bin/X11:/usr/local/bin"

# MSG Profile
#   Note: The equity profile puts its paths first
#if [ -f /bb/unsupported//etc/profile ]; then
#    SUBGRP="msg"
#    . /bb/unsupported/etc/profile
#fi

# Appends purify/quantify/insure paths
#if [ -f /bb/shared/bin/bbsi.setup ]; then
#    . /bb/shared/bin/bbsi.setup
#fi

# /opt/swt is generally very good, so it gets high priority
if [ -d /opt/swt ] ; then
   #PATH=/opt/swt/bin:${PATH}
  LD_LIBRARY_PATH=/opt/swt/lib:${LD_LIBRARY_PATH}
  MANPATH=${MANPATH}:/opt/swt/man
fi

# /usr/ccs is system stuff
if [ -d /usr/ccs ] ; then
  PATH=/usr/ccs/bin:${PATH}
  LD_LIBRARY_PATH=/usr/ccs/lib:${LD_LIBRARY_PATH}
fi

# order this from highest priority to lowest
# 2007-04-20: re-added /bb/bin to the end, since it completely disables usability
for appendPath in \
  /usr/openwin/bin \
  /bb/util/common/studio12/SUNWspro/bin \
  /bb/util/version10-082009/usr/vacpp/bin \
  /bbsrc/bin \
  /bbs/bin
#  /bb/bin
do
  [ -d $appendPath ] && PATH=${PATH}:${appendPath}
done

export PATH

PYTHONPATH=/bb/unsupported/${BBU_ARCH}/lib/python2.6/site-packages
export PYTHONPATH
echo "Set PYTHONPATH to ${PYTHONPATH}"

# }}}

# {{{ No Beeping

# locum results in an interactive shell sans DISPLAY, so xset causes errors
if [[ -n ${DISPLAY} ]]; then
  which xset >/dev/null 2>&1 
  if [[ $? == 0  ]]; then
    xset -b  # turn off beeps
  fi
fi

# }}}

# {{{ Fast xterm+ssh

alias x="xterm &"
alias xssh="xterm -e ssh"
SUNDEVS="1 2 3 9 13 18 30 32 36 37"
IBMS="1 2 3 4 6 7"
HPS="1 2 3"
for i in $SUNDEVS; do alias sdv$i="xterm -e ssh sundev$i & echo 'Opened window to sundev$i'" ; done
for i in $IBMS;    do alias ibm$i="xterm -e ssh ibm$i    & echo 'Opened window to ibm$i'" ;    done
for i in $HPS;     do alias  hp$i="xterm -e ssh hp$i     & echo 'Opened window to hp$i'" ;     done
alias eqty="xterm -e ssh njdeveqty1 &"

# xterm on IBM machines isn't good
#if [[ `uname` == "AIX" ]]; then
#  alias xterm="aixterm -fg black -bg lightgray -sb -sl 65000 -fn '-*-fixed-medium-r-*--13-120-75-75-c-60-iso8859-'"
#fi

# }}}

# {{{ Prompts, Window Titles

shortHost=$(echo $HOSTNAME | sed -e "s/sundev/sdv/")

# Remember, \[ and \] tell bash that the sequence in between is control chars.
# More quick reference:
#   \a = bell
#   \e = escape
#   \w = bash's current working dir (I used to use this before doing crazy git stuff)

# don't use any escapes inside vim (where it seems to set TERM=dumb)
if [[ $TERM == "xterm" || $TERM == "aixterm" ]]; then
  bold="\[\e[1m\]"
  normal="\[\e[0m\]"

  if [[ -n $STY ]]; then
    # Send the title to screen
    titleStart="\ek"
    titleEnd="\e\134"  # \134 is the octal for backslash so I don't have to double-escape it.
  else
    # Send the title to xterm
    titleStart="\e]0;"
    titleEnd="\a"
  fi
fi

if [[ $(uname) == 'HP-UX' || $(uname) == 'AIX' ]]; then
  # git stuff doesn't seem to work on HP

  PS1="\[${titleStart}${shortHost}  \w${titleEnd}\]${bold}${shortHost}${normal} \w ${bold}\$${normal} "
else
  # Careful -- some of these options slow down the prompt
  GIT_PS1_DESCRIBE_STYLE=branch
  # GIT_PS1_SHOWDIRTYSTATE=yes

  source /home/ddowhy/.git-completion.bash

  #PS1="\[${titleStart}${shortHost} \w${titleEnd}\]${bold}${shortHost}${normal} \w\$([[ -z \$MJS_STOP_GIT_PS1 ]] && __git_ps1 '[%s]') ${bold}\$${normal} "
  PS1="\[${titleStart}${shortHost} \w${titleEnd}\]${shortHost}${normal} \w\$([[ -z \$MJS_STOP_GIT_PS1 ]] && __git_ps1 '[%s]') ${bold}\$${normal} "
fi

# }}}

# {{{ Customizations for ls

if [[ `uname` == "Linux" ]]; then
  GNU_LS=`which ls`
fi
if [[ -z "${GNU_LS}" ]]; then
  GNU_LS="/bb/unsupported/$(uname)/bin/gls"
  if [[ ! -x ${GNU_LS} ]]; then
    GNU_LS=
  fi
fi
if [[ -z "${GNU_LS}" ]]; then
    GNU_LS="/opt/swt/bin/ls"
    if [[ ! -x ${GNU_LS} ]]; then
        GNU_LS=
    fi
fi

if [[ -n "${GNU_LS}" ]]; then
  if [[ $TERM == "xterm" || $TERM == "aixterm" ]]; then
    alias ls="${GNU_LS} -F --color"
    #export LS_COLORS='no=00:fi=00:di=34:ln=00:ex=01:*.o=37'
    export LS_COLORS='no=00:fi=00:di=01;34:ln=01;36:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.gz=01;31:*.bz2=01;31:*.deb=01;31:*.rpm=01;31:*.jpg=01;35:*.png=01;35:*.gif=01;35:*.bmp=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.png=01;35:*.mpg=01;35:*.avi=01;35:*.fli=01;35:*.gl=01;35:*.dl=01;35:*.c=00;33:*.cc=00;33:*.cpp=00;33:*.h=00;33:*.f=00;33:*.sh=00;33:*.gob=00;33:'
    #export LS_COLORS='no=00:fi=00:di=37:ln=36:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=01;05;31;40:ex=01;37:*.tar=01;31:*.tgz=01;31:*.c=00;33:*.cc=00;33:*.cpp=00;33:*.h=00;33:*.f=00;33:*.sh=00;33:*.gob=00;33:'
  else
    alias ls="${GNU_LS} -F"
  fi
fi
alias ll="ls -lh"
alias l="ll"
alias la="ll -a"
alias ldir="ll | grep ^d"
alias lsrc="ll *.inc *.f *.h *.c *.hpp *.cpp *.gob *.ml"

# }}}

# {{{ GNU Tools, options to standard tools

alias screen="/bb/source/swtlib/bin/screen -T $TERM"

XGTAIL=/bb/unsupported/`uname`/bin/xgtail
if [[ -x ${XGTAIL} ]]; then
  alias tail=${XGTAIL}
fi
function last { /usr/bin/ls "$@" | tail -1 ; }

alias tree="/bb/source/swtlib/bin/tree"

alias mv="mv -i"
alias cp="cp -i"

# }}}

# {{{ Emacs aliases [inactive]

#alias xemacs="/usr/local/bin/xemacs -g 100x55"
#alias emacs="/usr/local/bin/xemacs -nw"
#alias gnuclient="/usr/local/bin/gnuclient"

# }}}

# {{{ Vim aliases

alias gvim="vim -g -geometry 100x75 -p"
#alias v="vim -g -geometry 80x55 --remote-tab-silent"  # open file in potentially existing vim session
function v {
  tmp_v_list=
  for f in "$@" ; do
    if [ "$f" == "${f%.}." ] ; then
      tmp_v_list="${tmp_v_list} ${f}h ${f}cpp"
    else
      tmp_v_list="${tmp_v_list} $f"
    fi
  done
  vim -g -geometry 140x90 --remote-tab-silent ${tmp_v_list}
}

#alias vcd="vim --remote-send \"<Esc>:cd \`pwd\`<CR>\""  # switch vim to the current dir
function vcd {
  path=`(cd $1 ; pwd)`
  vim --remote-send "<Esc>:cd $path<CR>"  # switch vim to the current dir
}


# }}}

# {{{ Aliases to force specific scripts/tasks (don't want to add the whole dir to my PATH)

alias can_movethings.pl="~tmarshal/bin/can_movethings.pl"
alias findInTasks="/bbsrc/bin/prod/bin/aotools/findInTasks"
#alias mktemp="/bb/bin/mktemp" # this is prcmgr mktemp, not make a temp file
alias smpdiff="~snewbold/bin/smpdiff"  # Sam's prop diff script

# }}}

# {{{ Finding code at Bloomberg

function see { less $(srcfind --fileonly $1); }

function cop { if [ $# != 0 ]; then co -p $@ | less; fi }
alias cvsdiff="$HOME/tools/cvsmgdiff"

#}}}

# {{{ m(sg)big commands
alias mgmake_n="locum gmake tasks -s -j10 -l32 IBMake_dep_build_naive=yes"
alias mgmake="locum gmake tasks -s -j10 -l32"
alias mbigdir="cd /bb/mbig/mbig1888"
alias bcpc="ssh -X -i ~/.ssh/bct-team.pem bbuser@100.125.1.132"
alias go="./*.tsk mbig1888"
alias bgo="/bbsrc/tools/scripts/ap-stuff/start_mbig msgbig.tsk 1888 0"
alias dbx="/bb/bin/dbx"
alias dgo="dbx -c 'runargs mbig1888' ./*.tsk"
alias tvgo="tv8 ./*.tsk -a mbig1888"
#alias link="time plink msgbig"
alias link="time gmake msgbig"
alias make="time make"
alias mgo="make && go"
alias linklcl="time plink -d local msgbig"
alias pnt=pointmbig
function pntme   { for func in "$@"; do for sn in 221460 474477; do pnt -sn $func $sn 1888; done; done }
function unpntme { for func in "$@"; do for sn in 221460 474477; do pnt -sn - $func $sn;    done; done }
function pntkey {
    if [ $# = 0 ]; then
        echo "Usage: pntkey <key> <func(s)>"
        return 2;
    fi
    yellowKey=$1;
    for func in "$@"; do
        if [ $func != $yellowKey ]; then pointmbig 1888 $func $yellowKey; fi
    done
}

# }}}

# {{{ svn

export myroot="file:///bb/mbig/mbig1888/mysvn"

export robosvn="svn+ssh://devsvn/robo"

export msgroot=${SVNROOT}
export trunk=${msgroot}/trunk
export branches=${msgroot}/branches
export emov=${branches}/emov
export reltags=${msgroot}/tags/release
export tools=${msgroot}/tools

export ibroot="svn+ssh://devsvn/ib"

export GTK_TRUNK="file:///bbsrc/soft_tech/svn/appi/bb_gtk/trunk/"

alias sd="showdiffs"
alias svnmerge="echo Using svnmerge.py...; svnmerge.py"

function rev { if [ $# = 1 ]; then REV=$1; REV=${REV#r}; svn diff -c $REV $SVNROOT; fi }

function svnlogs {
    if [ $# = 0 ]; then return -1; fi
    for vers in $(echo $1 | sed -e "s/,/ /g" | sed -e "s/-/:/g"); do
        svn log -r$vers $2 --incremental $SVNROOT
    done
}

# }}}

# {{{ git

# Have to clear the PAGER so that git diff doesn't invoke less
# on the "results", when we'd rather it just fork and stop doing anything.
alias gd="\
GIT_PAGER= \
GIT_EXTERNAL_DIFF=/home/ddowhy/bin/tkdiff-git-wrapper \
git diff"

alias gitka="gitk --all &"

alias gitpub="git push --mirror pub"

export gitpub="/bb/unsupported/srv/git"

# }}}

# {{{ haskell

for name in ghc ghci; do
    alias $name="/bb/unsupported/$(uname)/bin/$name"
done

# }}} haskell

# {{{ gtail in a nicely titled window
function mon {
    if [ $# = 0 ]; then
        echo "Error: No strings provided!"
    else
        searchTerms="$@" # xterm has problems if I don't parse the $@ out here
        xterm -T "gtail@$HOSTNAME for: $searchTerms" -e gtail $searchTerms &
    fi
}
alias bigmon="mon mbig1888"
# }}}
extract () {
   if [ -f $1 ] ; then
       case $1 in
	*.tar.bz2)	tar xvjf $1 && cd $(basename "$1" .tar.bz2) ;;
	*.tar.gz)	tar xvzf $1 && cd $(basename "$1" .tar.gz) ;;
	*.tar.xz)	tar Jxvf $1 && cd $(basename "$1" .tar.xz) ;;
	*.bz2)		bunzip2 $1 && cd $(basename "$1" /bz2) ;;
	*.rar)		unrar x $1 && cd $(basename "$1" .rar) ;;
	*.gz)		gunzip $1 && cd $(basename "$1" .gz) ;;
	*.tar)		tar xvf $1 && cd $(basename "$1" .tar) ;;
	*.tbz2)		tar xvjf $1 && cd $(basename "$1" .tbz2) ;;
	*.tgz)		tar xvzf $1 && cd $(basename "$1" .tgz) ;;
	*.zip)		unzip $1 && cd $(basename "$1" .zip) ;;
	*.Z)		uncompress $1 && cd $(basename "$1" .Z) ;;
	*.7z)		7z x $1 && cd $(basename "$1" .7z) ;;
	*)		echo "don't know how to extract '$1'..." ;;
       esac
   else
       echo "'$1' is not a valid file!"
   fi
 }
# {{{ Notes and things no longer used

# OOC boilerplate code is in: /home/jcariell/src/ooc/boilerplate

# I think using the GNU ls makes -h available on IBMs
#if [ "$HOST" = "${HOST#ibm}" ]; then
#  alias ll="ls -lh"
#else
#  alias ll="ls -l"  # ibm doesn't like -h
#fi

##--- Clearcase
#CC_KSHRC=/bbsrc/tools/bbcm/kshrc
#if [[ -r $CC_KSHRC ]]; then
#	. $CC_KSHRC
#fi
## EOF

# weird arrow key stuff
# - usually don't need this, but thought it might help my shell in vim
#alias __A=
#alias __B=
#alias __C=
#alias __D=

# for GNU ls (/bbs/swtlib/bin/ls)
# from Carlos's profile:
#LS_COLORS='no=00:fi=00:di=37:ln=36:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=01;05;31;40:ex=01;37:*.tar=01;31:*.tgz=01;31:*.c=00;33:*.cc=00;33:*.cpp=00;33:*.h=00;33:*.f=00;33:*.sh=00;33:*.gob=00;33:'

# }}}

# vim: set foldmethod=marker:
stty erase '^?'
#if tty --quiet ; then
#    stty erase '^?'
#fi

